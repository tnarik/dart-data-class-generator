{
    "name": "dart-data-o-matic",
    "displayName": "Dart Data-O-matic (DarDO)",
    "description": "Create Dart data classes easily from simple classes with properties or JSON payloads",
    "publisher": "Tnarik @ Le Caf√© Automatique",
    "version": "0.6.0",
    "engines": {
        "vscode": "^1.37.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/tnarik/dart-data-class-generator"
    },
    "bugs": {
        "url": "https://github.com/tnarik/dart-data-class-generator/issues",
        "email": "tnarik@lecafeautomatique.co.uk"
    },
    "icon": "assets/icon.png",
    "keywords": [
        "dart data class generator",
        "dart data class",
        "dart data",
        "dart",
        "data class generator",
        "class generator",
        "json to dart"
    ],
    "author": {
        "name": "Tnarik Innael"
    },
    "categories": [
        "Programming Languages",
        "Other"
    ],
    "activationEvents": [
        "onLanguage:dart",
        "onCommand:dart-data-o-matic.generate.from_props",
        "onCommand:dart-data-o-matic.generate.from_json"
    ],
    "main": "./src/extension.js",
    "contributes": {
        "commands": [
            {
                "title": "Dart Data-O-matic (DarDO): Generate from class properties",
                "command": "dart-data-o-matic.generate.from_props"
            },
            {
                "title": "Dart Data-O-matic (DarDO): Generate from JSON",
                "command": "dart-data-o-matic.generate.from_json"
            }
        ],
        "configuration": {
            "title": "Dart Data-O-matic",
            "properties": {
                "dart-data-o-matic.quick_fixes": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, enables quick fixes to quickly generate data classes or specific methods only."
                },
                "dart-data-o-matic.fromMap.default_values": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": false,
                    "description": "If true, checks if a field is null when deserializing and provides a non-null default value."
                },
                "dart-data-o-matic.constructor.default_values": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": false,
                    "description": "If true, generates default values for the constructor."
                },
                "dart-data-o-matic.constructor.required": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": false,
                    "description": "If true, generates the @required annotiation to every constructor parameter. Note: The generator wont generate default values for the constructor if enabled!"
                },
                "dart-data-o-matic.override.manual": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": false,
                    "description": "If true, asks, when overriding a class (running the command on an existing class), for every single function/constructor that needs to be changed whether the generator should override the function or not. This allows you to preserve custom changes you made to the function/constructor that would be otherwise overwritten by the generator."
                },
                "dart-data-o-matic.json.separate": {
                    "type": "string",
                    "enum": [
                        "ask",
                        "separate",
                        "current_file"
                    ],
                    "default": "ask",
                    "description": "Whether to separate a JSON into multiple files, when the JSON contains nested objects. ask: choose manually every time, separate: always separate into multiple files, current_file: always insert all classes into the current file."
                },
                "dart-data-o-matic.constructor.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a constructor for a data class."
                },
                "dart-data-o-matic.copyWith.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a copyWith function for a data class."
                },
                "dart-data-o-matic.toMap.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a toMap function for a data class."
                },
                "dart-data-o-matic.fromMap.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a fromMap function for a data class."
                },
                "dart-data-o-matic.toJson.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a toJson function for a data class."
                },
                "dart-data-o-matic.fromJson.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a fromJson function for a data class."
                },
                "dart-data-o-matic.toString.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a toString function for a data class."
                },
                "dart-data-o-matic.equality.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates an override of the == (equals) operator for a data class."
                },
                "dart-data-o-matic.hashCode.enabled": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": true,
                    "description": "If true, generates a hashCode function for a data class."
                },
                "dart-data-o-matic.hashCode.use_jenkins": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": false,
                    "description": "If true, uses the Jenkins SMI hash function instead of bitwise operator from dart:ui."
                },
                "dart-data-o-matic.useEquatable": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "default": false,
                    "description": "If true, uses equatable for value equality and hashcode."
                }
            }
        }
    },
    "scripts": {
        "test": "node ./test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^5.2.6",
        "@types/node": "^10.12.21",
        "@types/vscode": "^1.37.0",
        "eslint": "^5.13.0",
        "glob": "^7.1.4",
        "mocha": "^6.1.4",
        "typescript": "^3.3.1",
        "vscode-test": "^1.0.2"
    },
    "dependencies": {
        "change-case": "^4.1.2"
    }
}
